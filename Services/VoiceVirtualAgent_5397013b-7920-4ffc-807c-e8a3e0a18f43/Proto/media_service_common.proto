/*
common Proto file for the media service flow
*/
syntax = "proto3";

package com.cisco.wcc.ccai.media.v1;

/*
 Content of the text input
*/
message TextContent {
  // The content can be either plain text or SSML.
  oneof input_content {
    // Plain text input.
    string text = 1;

    // SSML formatted text input.
    string ssml = 2;
  }
  // Language code ofF the user input, e.g., 'en-US'.
  string language_code = 3;
}

// Timers for controlling input collection timing.
message InputSpeechTimers {
  // Maximum duration of an utterance in milliseconds.
  int32 max_speech_timeout_msec = 1;
  // Duration of silence after an utterance before concluding it's complete.
  int32 complete_timeout_msec = 2;
  // Duration of silence after an utterance before concluding it's
  // incomplete.
  int32 incomplete_timeout_msec = 3;
}

// Configuration for capturing DTMF tones and speech timers.
message InputHandlingConfig {
  DTMFInputConfig dtmf_config = 1; // DTMF input configurations.
  // Represents the timer settings for speech recognition.
  InputSpeechTimers speech_timers = 2;
}

/* DTMF digits, including A, B, C, and D.*/
enum DTMFDigits {
  DTMF_EVENT_UNSPECIFIED = 0;
  // Number: '1'.
  DTMF_DIGIT_ONE = 1;

  // Number: '2'.
  DTMF_DIGIT_TWO = 2;

  // Number: '3'.
  DTMF_DIGIT_THREE = 3;

  // Number: '4'.
  DTMF_DIGIT_FOUR = 4;

  // Number: '5'.
  DTMF_DIGIT_FIVE = 5;

  // Number: '6'.
  DTMF_DIGIT_SIX = 6;

  // Number: '7'.
  DTMF_DIGIT_SEVEN = 7;

  // Number: '8'.
  DTMF_DIGIT_EIGHT = 8;

  // Number: '9'.
  DTMF_DIGIT_NINE = 9;

  // Number: '10'.
  DTMF_DIGIT_ZERO = 10;

  // Letter: 'A'.
  DTMF_DIGIT_A = 11;

  // Letter: 'B'.
  DTMF_DIGIT_B = 12;

  // Letter: 'C'.
  DTMF_DIGIT_C = 13;

  // Letter: 'D'.
  DTMF_DIGIT_D = 14;

  // Asterisk/star: '*'.
  DTMF_DIGIT_STAR = 15;

  // Pound/diamond/hash/square/gate/octothorpe: '#'.
  DTMF_DIGIT_POUND = 16;
}

// Configuration for DTMF inputs.
message DTMFInputConfig {
  // Timeout between two digits in milliseconds.
  int32 inter_digit_timeout_msec = 1;
  DTMFDigits termchar = 2; // Termination character for DTMF inputs (e.g., '#').
  int32 dtmf_input_length = 3; // Maximum length of DTMF input.
}

// DTMF input digits
message DTMFInputs {
  repeated DTMFDigits dtmf_events = 1; // Sequence of Telephony DTMF digits.
}

/*
 Represents the Request format for List virtual agent
*/
message ListVARequest {

  // Customer organization ID.
  string customer_org_id = 1;

  bool is_default_answers_enabled = 2; // default answers enabled / disabled - boolean value
  bool is_default_virtual_agent_enabled = 3; //default virtual agent enabled / disabled - boolean value
}

/*
 Represents the virtual agent information
*/
message VirtualAgentInfo{

  //Indicates the bots unique identifier
  string virtual_agent_id = 1;

  //Indicates the bot name
  string virtual_agent_name = 2;

  //Indicates whether the respective bot is a default bot for the selected provider
  bool is_default = 3;

  // Any additional attributes that are required
  map<string, string> attributes = 4;
}

/*
 Represents the Response format for List virtual agent
*/
message ListVAResponse{

  //Indicates the list of bots for the selected provider
  repeated VirtualAgentInfo virtual_agents = 1;

}

/*
 Represents the Type of Events
*/
message InputEvent {
  //Possible event types
  enum EventType {
    EVENT_UNSPECIFIED = 0; // unspecified event
    SESSION_START = 1;   // Event indicating the start of the interaction. for voice agent its call_start
    SESSION_END = 2;     // Event indicating the end of the interaction.for voice agent its call_end
    // Event indicating no input was received from the user.
    NO_INPUT = 3;
    START_OF_DTMF = 4;   // Event indicating start of DTMF input.
  }
  //input event type
  EventType event_type = 1;
}